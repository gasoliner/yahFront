<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yah.mapper.RecruitMapper">
  <resultMap id="BaseResultMap" type="cn.yah.po.Recruit">
    <id column="rid" jdbcType="INTEGER" property="rid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="publishtime" jdbcType="TIMESTAMP" property="publishtime" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="experience" jdbcType="VARCHAR" property="experience" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="count" jdbcType="VARCHAR" property="count" />
    <result column="info" jdbcType="VARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rid, name, eid, linkman, phone, salary, publishtime, addr, nature, experience, cid, 
    education, count, info
  </sql>
  <select id="selectByExample" parameterType="cn.yah.po.RecruitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recruit
    where rid = #{rid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recruit
    where rid = #{rid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yah.po.RecruitExample">
    delete from recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yah.po.Recruit">
    insert into recruit (rid, name, eid, 
      linkman, phone, salary, 
      publishtime, addr, nature, 
      experience, cid, education, 
      count, info)
    values (#{rid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{eid,jdbcType=INTEGER}, 
      #{linkman,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{salary,jdbcType=VARCHAR}, 
      #{publishtime,jdbcType=TIMESTAMP}, #{addr,jdbcType=VARCHAR}, #{nature,jdbcType=VARCHAR}, 
      #{experience,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{education,jdbcType=VARCHAR}, 
      #{count,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yah.po.Recruit">
    insert into recruit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        rid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="publishtime != null">
        publishtime,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yah.po.RecruitExample" resultType="java.lang.Long">
    select count(*) from recruit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update recruit
    <set>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
      <if test="record.publishtime != null">
        publishtime = #{record.publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=VARCHAR},
      </if>
      <if test="record.experience != null">
        experience = #{record.experience,jdbcType=VARCHAR},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update recruit
    set rid = #{record.rid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      eid = #{record.eid,jdbcType=INTEGER},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=VARCHAR},
      publishtime = #{record.publishtime,jdbcType=TIMESTAMP},
      addr = #{record.addr,jdbcType=VARCHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      experience = #{record.experience,jdbcType=VARCHAR},
      cid = #{record.cid,jdbcType=INTEGER},
      education = #{record.education,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yah.po.Recruit">
    update recruit
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        publishtime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
    </set>
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yah.po.Recruit">
    update recruit
    set name = #{name,jdbcType=VARCHAR},
      eid = #{eid,jdbcType=INTEGER},
      linkman = #{linkman,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=VARCHAR},
      publishtime = #{publishtime,jdbcType=TIMESTAMP},
      addr = #{addr,jdbcType=VARCHAR},
      nature = #{nature,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=INTEGER},
      education = #{education,jdbcType=VARCHAR},
      count = #{count,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR}
    where rid = #{rid,jdbcType=INTEGER}
  </update>
</mapper>